Exceptions are events that occur during the execution of programs that disrupt the
normal flow of instructions (e.g. divide by zero, array access out of bound, etc.).
=> In Java, an exception is an object that wraps an error event that occurred within
a method and contains:
    + Information about the error including its type
    + The state of the program when the error occurred
    + Optionally, other custom information
=> Exception objects can be thrown and caught.
=> Hierarchy:
    + Throwable: Base class from which Error and Exception extend
    + Error class: represents serious errors that a program generally shouldn't expect to
    catch or recover from.
        Example: OutOfMemoryError
    + Exception class: represents errors that a program can reasonably recover from.
        -> Built-in Exceptions:
            - ArithmeticException: It is thrown when an exceptional condition has occurred in an arithmetic operation.
            - ArrayIndexOutOfBoundsException: It is thrown to indicate that an array has been accessed with an illegal index.
            - ClassNotFoundException: This Exception is raised when we try to access a class whose definition is not found
            - FileNotFoundException: This Exception is raised when a file is not accessible or does not open.
            - IOException: It is thrown when an input-output operation failed or interrupted
            - InterruptedException: It is thrown when a thread is waiting , sleeping , or doing some processing , and it is interrupted.
            - NoSuchFieldException: It is thrown when a class does not contain the field (or variable) specified
            - NoSuchMethodException: It is thrown when accessing a method which is not found.
            - NullPointerException: This exception is raised when referring to the members of a null object. Null represents nothing
            - NumberFormatException: This exception is raised when a method could not convert a string into a numeric format.
            - RuntimeException: This represents any exception which occurs during runtime.
            - StringIndexOutOfBoundsException:  It is thrown by String class methods to indicate that an index is either negative than the size of the string
        -> User-defined Exceptions: Sometimes, the built-in exceptions in Java are not able to describe a certain situation. In such cases, user can also create
        exceptions which are called ‘user-defined Exceptions’.

(For demos, please visit https://www.geeksforgeeks.org/types-of-exception-in-java-with-examples/)
